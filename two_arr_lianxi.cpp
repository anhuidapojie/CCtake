// 声明一个3x3的整数二维数组，并初始化所有元素为0。
// 声明一个3x3的整数二维数组，并手动初始化所有元素为1
// 编写代码，手动初始化一个3x3的二维数组 并且输出所有元素。
// 编写代码，手动初始化一个3x3的二维数组，计算这个3x3二维数组的所有元素之和。
// 编写代码，手动初始化一个3x3的二维数组，找出一个3x3二维数组中的最大值。
// 编写代码，手动初始化一个3x3的二维数组，找出一个3x3二维数组中的最小值。
// 编写代码，手动初始化一个3x3的二维数组，计算一个3x3二维数组的主对角线元素之和。
// 编写代码，手动初始化一个3x3的二维数组，将一个3x3二维数组转置（行列互换）。
// 编写代码，手动初始化一个3x3的二维数组，计算一个3x3二维数组的每行元素之和。
// 编写代码，手动初始化一个3x3的二维数组，计算一个3x3二维数组的每列元素之和。
// 编写代码，手动初始化一个3x3的二维数组，判断一个3x3二维数组是否是关于主对角线对称矩阵。
// 编写代码，手动初始化一个3x3的二维数组，将一个3x3二维数组的所有元素乘以2。
// 编写代码，手动初始化一个3x3的二维数组，将一个3x3二维数组的所有元素加1。
// 编写代码，手动初始化一个3x3的二维数组，将一个3x3二维数组的所有元素设置为它们的行号加列号。
// 编写代码，手动初始化一个3x3的二维数组，将一个3x3二维数组的所有元素设置为它们的行号乘以列号。
// 编写代码，手动初始化一个3x3的二维数组，将一个3x3二维数组的所有偶数元素替换为0。
// 编写代码，手动初始化一个3x3的二维数组，将一个3x3二维数组的所有奇数元素替换为1。
// 编写代码，手动初始化一个3x3的二维数组，将一个3x3二维数组的所有元素按行优先顺序输出。
// 编写代码，手动初始化一个3x3的二维数组，将一个3x3二维数组的所有元素按列优先顺序输出。
#include <iostream>
using namespace std;
 
int main(int argc,char const * argv[])
{

    return 0;
}